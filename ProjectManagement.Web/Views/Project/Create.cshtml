@model ProjectManagement.Entities.ResponseModel<ProjectManagement.Entities.Models.ProjectModel>

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    var buttonText = Model == null ? "Create" : "Edit";
}

<h1>@buttonText</h1>

<h4>Project</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @Html.HiddenFor(model => model.Result.Id)
            <div class="form-group">
                @Html.Label("ProjectName")
                @Html.TextBoxFor(model => model.Result.Name)
                @Html.ValidationMessageFor(model => model.Result.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.Label("ProjectAmount")
                @Html.TextBoxFor(model => model.Result.Amount)
                @Html.ValidationMessageFor(model => model.Result.Amount, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.Label("ProjectTenure")
                @Html.TextBoxFor(model => model.Result.Tenure)
                @Html.ValidationMessageFor(model => model.Result.Tenure, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.Label("Client Name")
                @Html.TextBoxFor(model => model.Result.CustomerName)
                @Html.ValidationMessageFor(model => model.Result.CustomerName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="submit" value="@buttonText" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "List")
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
